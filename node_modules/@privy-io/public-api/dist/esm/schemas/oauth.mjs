import{z as t}from"zod";import{UnauthorizedError as e,PrivyErrorCode as o}from"@privy-io/api-base";import{SUPPORTED_OAUTH_PROVIDERS as r}from"../constants/oauth.mjs";import{BaseAccountTransferInput as i}from"./account-transfer.mjs";import{AuthenticateMode as a}from"./core.mjs";import{User as s,OAuthTokens as n}from"./user.mjs";import"bs58";import"libphonenumber-js/max";import"viem";import"./smart-wallet-config.mjs";import"../constants/smart-wallets.mjs";import"./wallet-api/wallets.mjs";import"./api.mjs";import"./transaction.mjs";import"./wallet-api/export.mjs";const p=t.enum(r,{invalid_type_error:"Please specify a supported provider.",required_error:"Please specify a supported provider."}),m=p.or(t.custom((t=>"string"==typeof t&&/^privy:[a-z0-9]{25}$/i.test(t)),{message:"Please specify a supported provider."})),l=t.object({authorization_code:t.string(),state_code:t.string(),code_verifier:t.string().min(43).max(128).optional(),code_type:t.enum(["raw"]).optional()}).merge(a).catch((()=>{throw new e("Please specify authorization_code and state_code.",o.INVALID_CREDENTIALS)})),c=t.object({redirect_to:t.string({required_error:"Please provide a redirect_to value."}),provider:m,token:t.string().optional(),state_code:t.string().optional(),code_challenge:t.string().optional()}),d=t.object({authorization_code:t.string(),state_code:t.string(),code_verifier:t.string().min(43).max(128).optional(),code_type:t.enum(["raw"]).optional()}),u=t.object({subject:t.string(),provider:m}),g=t.object({url:t.string()}),_=s.extend({oauth_tokens:n.optional()}),j=i.extend({userInfo:t.object({subject:t.string(),name:t.string().optional(),username:t.string().optional(),profilePictureUrl:t.string().optional(),email:t.string().optional().nullable(),vanityName:t.string().optional()})});export{l as AuthenticateOauthInput,p as ExternalOAuthProvider,d as LinkOAuthInput,c as OAuthInitInput,g as OAuthInitResponse,_ as OAuthLinkResponse,m as OAuthProvider,u as OAuthUnlinkInput,r as SUPPORTED_OAUTH_PROVIDERS,j as TransferOAuthInput};
