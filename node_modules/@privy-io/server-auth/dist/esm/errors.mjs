class r extends Error{toString(){return`${this.type}: ${this.message}`}constructor(r,e){super(r),e instanceof Error&&(this.cause=e)}}class e extends r{constructor(r,e,t,o){super(t,o),this.type=r,this.status=e}}class t extends r{constructor(r,e){super(r,e),this.type="client_error"}}function o(r){return"object"==typeof r&&r.data.method&&r.data.error&&r.data.error.message&&r.data.error.code?{type:"error",error:Error(r.data.error.message)}:"object"==typeof r&&r?.url?{type:"redaxios",error:r}:r instanceof Error?{type:"error",error:r}:{type:"internal",error:new t(`Internal error: ${r}`)}}const s=r=>{let{type:t,error:s}=o(r);return"redaxios"!==t?a(s):new e(s.data?.code??"api_error",s.status,s.data?.error??s.statusText,s)},a=e=>e instanceof r?e:e instanceof Error?new t(e.message,e):new t(`Internal error: ${e}`);export{e as PrivyApiError,t as PrivyClientError,r as PrivyError,a as formatPrivyError,o as toTypedError,s as wrapApiError};
