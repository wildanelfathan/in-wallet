import type { DhkemPrimitives, KdfInterface } from "@hpke/common";
import { NativeAlgorithm } from "@hpke/common";
export declare class X448 extends NativeAlgorithm implements DhkemPrimitives {
    private _hkdf;
    private _alg;
    private _nPk;
    private _nSk;
    private _nDh;
    private _pkcs8AlgId;
    constructor(hkdf: KdfInterface);
    serializePublicKey(key: CryptoKey): Promise<ArrayBuffer>;
    deserializePublicKey(key: ArrayBuffer): Promise<CryptoKey>;
    serializePrivateKey(key: CryptoKey): Promise<ArrayBuffer>;
    deserializePrivateKey(key: ArrayBuffer): Promise<CryptoKey>;
    importKey(format: "raw" | "jwk", key: ArrayBuffer | JsonWebKey, isPublic: boolean): Promise<CryptoKey>;
    generateKeyPair(): Promise<CryptoKeyPair>;
    deriveKeyPair(ikm: ArrayBuffer): Promise<CryptoKeyPair>;
    derivePublicKey(key: CryptoKey): Promise<CryptoKey>;
    dh(sk: CryptoKey, pk: CryptoKey): Promise<ArrayBuffer>;
    private _importRawKey;
    private _importJWK;
    private _deserializePkcs8Key;
}
//# sourceMappingURL=x448.d.ts.map