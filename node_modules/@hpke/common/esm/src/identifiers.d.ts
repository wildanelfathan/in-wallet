/**
 * The supported HPKE modes.
 */
export declare const Mode: {
    readonly Base: 0;
    readonly Psk: 1;
    readonly Auth: 2;
    readonly AuthPsk: 3;
};
/**
 * The type alias of the supported HPKE modes.
 */
export type Mode = typeof Mode[keyof typeof Mode];
/**
 * The supported Key Encapsulation Mechanism (KEM) identifiers.
 */
export declare const KemId: {
    readonly NotAssigned: 0;
    readonly DhkemP256HkdfSha256: 16;
    readonly DhkemP384HkdfSha384: 17;
    readonly DhkemP521HkdfSha512: 18;
    readonly DhkemSecp256k1HkdfSha256: 19;
    readonly DhkemX25519HkdfSha256: 32;
    readonly DhkemX448HkdfSha512: 33;
    readonly HybridkemX25519Kyber768: 48;
    readonly MlKem512: 64;
    readonly MlKem768: 65;
    readonly MlKem1024: 66;
    readonly XWing: 25722;
};
/**
 * The type alias of the supported KEM identifiers.
 */
export type KemId = typeof KemId[keyof typeof KemId];
/**
 * The supported Key Derivation Function (KDF) identifiers.
 */
export declare const KdfId: {
    readonly HkdfSha256: 1;
    readonly HkdfSha384: 2;
    readonly HkdfSha512: 3;
};
/**
 * The type alias of the supported KDF identifiers.
 */
export type KdfId = typeof KdfId[keyof typeof KdfId];
/**
 * The supported Authenticated Encryption with Associated Data (AEAD) identifiers.
 */
export declare const AeadId: {
    readonly Aes128Gcm: 1;
    readonly Aes256Gcm: 2;
    readonly Chacha20Poly1305: 3;
    readonly ExportOnly: 65535;
};
/**
 * The type alias of the supported AEAD identifiers.
 */
export type AeadId = typeof AeadId[keyof typeof AeadId];
//# sourceMappingURL=identifiers.d.ts.map